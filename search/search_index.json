{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to OpenMovies API Documentation","text":"<p>OpenMovies API is a web service designed to provide movie details. It's a personal project created to test and improve my skills in developing web APIs using C# and .NET. If you are interested in exploring movie information, feel free to integrate the OpenMovies API into your project.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Movie Details: Retrieve comprehensive information about specific movies.</li> <li>Search Functionality: Perform searches using specific criteria to find movies.</li> <li>User-Friendly Documentation: Accessible and well-documented API to facilitate integration.</li> </ul>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>About OpenMovies</li> <li>Release Notes</li> </ul> <p>Note: OpenMovies API is a personal project created for skill development and experimentation.</p>"},{"location":"about/","title":"About OpenMovies API","text":"<p>OpenMovies is a RESTful Web API project developed to test my skills in API development using .NET/C#. The goal is to provide endpoints for exploring movie details, performing searches with specific criteria, and offering accessible documentation to facilitate integration.</p>"},{"location":"about/#project-details","title":"Project Details","text":"<ul> <li>Developed with .NET 8, C#, and ASP.NET Core.</li> <li>GitHub Repository</li> <li>LinkedIn</li> <li>Email</li> </ul>"},{"location":"about/#project-background","title":"Project Background","text":"<p>OpenMovies is a personal project created to challenge and enhance my API development skills. It allows me to apply and experiment with the latest technologies and best practices in the field. The API is designed to be user-friendly, providing a seamless experience for developers interested in exploring and integrating movie-related data.</p> <p>Note: This project is a personal initiative for skill development and experimentation.</p>"},{"location":"endpoints/categories/","title":"Categories Endpoint Overview","text":"<p>The <code>/api/categories/</code> endpoint provides operations related to categories. Here are the key functionalities available:</p> <ul> <li>Get All Categories: Returns a list of all categories.</li> <li>Get Category by ID: Returns details of a specific category based on the ID.</li> <li>Create Category: Creates a new category based on the provided data.</li> <li>Update Category: Updates an existing category based on the ID.</li> <li>Delete Category: Deletes a category based on the ID.</li> </ul> <p>Each operation has its own route and specific purpose. Click on the links above to get more details about each resource.</p> <p>This is a simple summary providing an overview of the main features available in the Categories Endpoint. The links allow developers to directly access detailed information about each operation.</p>"},{"location":"endpoints/directors/","title":"Directors Endpoint Overview","text":"<p>The <code>/api/directors/</code> endpoint provides operations related to directors. Here are the key functionalities available:</p> <ul> <li>Get All Directors: Returns a list of all directors.</li> <li>Get Director by ID: Returns details of a specific director based on the ID.</li> <li>Create Director: Creates a new director based on the provided data.</li> <li>Update Director: Updates an existing director based on the ID.</li> <li>Delete Director: Deletes a director based on the ID.</li> </ul> <p>Each operation has its own route and specific purpose. Click on the links above to get more details about each resource.</p> <p>This is a simple summary providing an overview of the main features available in the Directors Endpoint. The links allow developers to directly access detailed information about each operation.</p>"},{"location":"endpoints/movies/","title":"Movies Endpoint Overview","text":"<p>The <code>/api/movies/</code> endpoint provides operations related to movies. Here are the key functionalities available:</p> <ul> <li>Get All Movies: Returns a paginated list of all movies.</li> <li>Get Movie by ID: Returns details of a specific movie based on the ID.</li> <li>Create Movie: Creates a new movie based on the provided data.</li> <li>Update Movie: Updates an existing movie based on the ID.</li> <li>Delete Movie: Deletes a movie based on the ID.</li> <li>Search Movies: Performs a search for movies based on various criteria.</li> </ul> <p>Each operation has its own route and specific purpose. Click on the links above to get more details about each resource.</p> <p>This is a simple summary providing an overview of the main features available in the Movies Endpoint. The links allow developers to directly access detailed information about each operation.</p>"},{"location":"endpoints/categories/create-category/","title":"Create Category","text":""},{"location":"endpoints/categories/create-category/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>POST</code></li> <li>URL: <code>api/categories</code></li> </ul>"},{"location":"endpoints/categories/create-category/#description","title":"Description","text":"<p>Creates a new category based on the provided data.</p>"},{"location":"endpoints/categories/create-category/#request-body","title":"Request body","text":"<ul> <li><code>Name</code> (required): The name of the category.</li> </ul>"},{"location":"endpoints/categories/create-category/#example-request","title":"Example request","text":"<pre><code>POST /api/categories\nContent-Type: application/json\n\n{\n  \"Name\": \"Adventure\"\n}\n</code></pre>"},{"location":"endpoints/categories/create-category/#response","title":"Response","text":"<ul> <li>HTTP 201 Create: Returns details of the newly created category.</li> </ul> <pre><code>{\n    \"id\": 2,\n    \"name\": \"Adventure\"\n}\n</code></pre>"},{"location":"endpoints/categories/create-category/#error-responses","title":"Error responses","text":"<ul> <li> <p>HTTP 400 Bad Request: If the request body is invalid.</p> </li> <li> <p>HTTP 409 Conflict: If a category with the same name already exists.</p> </li> </ul>"},{"location":"endpoints/categories/delete-category/","title":"Delete Category","text":"<p>Deletes a category based on the provided ID.</p>"},{"location":"endpoints/categories/delete-category/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>DELETE</code></li> <li>URL: <code>/api/categories/{id}</code></li> </ul>"},{"location":"endpoints/categories/delete-category/#path-parameters","title":"Path parameters","text":"<ul> <li><code>id</code> (required): The unique identifier of the category.</li> </ul>"},{"location":"endpoints/categories/delete-category/#example-request","title":"Example request","text":"<pre><code>DELETE /api/categories/1\n</code></pre>"},{"location":"endpoints/categories/delete-category/#response","title":"Response","text":"<ul> <li>HTTP 204 No Content: Successfully deletes the category.</li> </ul>"},{"location":"endpoints/categories/delete-category/#error-response","title":"Error response","text":"<ul> <li>HTTP 404 Not Found: If no category is found with the specified ID.</li> </ul>"},{"location":"endpoints/categories/get-all/","title":"Get All Categories","text":""},{"location":"endpoints/categories/get-all/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>GET</code></li> <li>URL: <code>api/categories/</code></li> </ul>"},{"location":"endpoints/categories/get-all/#description","title":"Description","text":"<p>Retrieves a list of all categories available.</p>"},{"location":"endpoints/categories/get-all/#example-request","title":"Example request","text":"<pre><code>GET /api/categories/\n</code></pre>"},{"location":"endpoints/categories/get-all/#response","title":"Response","text":"<ul> <li>HTTP 200 OK: Returns a list of all categories.</li> </ul> <pre><code>[\n  {\n    \"Id\": 1,\n    \"Name\": \"Action\"\n  },\n  {\n    \"Id\": 2,\n    \"Name\": \"Comedy\"\n  },\n  {\n    \"Id\": 3,\n    \"Name\": \"Drama\"\n  }\n  // ... other categories\n]\n</code></pre>"},{"location":"endpoints/categories/get-by-id/","title":"Get Category by ID","text":""},{"location":"endpoints/categories/get-by-id/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>GET</code></li> <li>URL: <code>api/categories/{id}</code></li> </ul>"},{"location":"endpoints/categories/get-by-id/#description","title":"Description","text":"<p>Retrieves details of a specific category based on the provided ID.</p>"},{"location":"endpoints/categories/get-by-id/#path-parameters","title":"Path parameters","text":"<ul> <li><code>id</code> (required): The unique identifier of the category.</li> </ul>"},{"location":"endpoints/categories/get-by-id/#example-request","title":"Example request","text":"<pre><code>GET /api/categories/1\n</code></pre>"},{"location":"endpoints/categories/get-by-id/#response","title":"Response","text":"<ul> <li>HTTP 200 OK: Returns details of the specified category.</li> </ul> <pre><code>{\n  \"Id\": 1,\n  \"Name\": \"Action\"\n}\n</code></pre>"},{"location":"endpoints/categories/get-by-id/#error-response","title":"Error response","text":"<ul> <li>HTTP 404 Not Found: If no category is found with the specified ID.</li> </ul>"},{"location":"endpoints/categories/update-category/","title":"Update Category","text":""},{"location":"endpoints/categories/update-category/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>PUT</code></li> <li>URL: <code>api/categories/{id}</code></li> </ul>"},{"location":"endpoints/categories/update-category/#description","title":"Description","text":"<p>Updates an existing category based on the provided data and category ID.</p>"},{"location":"endpoints/categories/update-category/#path-parameters","title":"Path parameters","text":"<ul> <li><code>id</code> (required): The unique identifier of the category.</li> </ul>"},{"location":"endpoints/categories/update-category/#request-body","title":"Request body","text":"<ul> <li><code>Name</code> (required): The updated name of the category.</li> </ul>"},{"location":"endpoints/categories/update-category/#example-request","title":"Example request","text":"<pre><code>PUT /api/categories/2\nContent-Type: application/json\n\n{\n  \"Name\": \"Fantasy\"\n}\n</code></pre>"},{"location":"endpoints/categories/update-category/#response","title":"Response","text":"<ul> <li>HTTP 204 No Content: Indicates a sucessful update.</li> </ul>"},{"location":"endpoints/categories/update-category/#error-responses","title":"Error responses","text":"<ul> <li> <p>HTTP 400 Bad Request: If the request body is invalid.</p> </li> <li> <p>HTTP 404 Not found: If no category is found with the specified ID.</p> </li> </ul>"},{"location":"endpoints/directors/create-director/","title":"Create Director","text":""},{"location":"endpoints/directors/create-director/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>POST</code></li> <li>URL: <code>api/directors/</code></li> </ul>"},{"location":"endpoints/directors/create-director/#description","title":"Description","text":"<p>Creates a new director based on the provided data.</p>"},{"location":"endpoints/directors/create-director/#request","title":"Request","text":""},{"location":"endpoints/directors/create-director/#body","title":"Body","text":"<p>The request body should contain JSON data with the following properties:</p> <ul> <li><code>FirstName</code> (string, required): First name of the director.</li> <li><code>LastName</code> (string, required): Last name of the director.</li> </ul> <p>Example:</p> <pre><code>{\n  \"FirstName\": \"Christopher\",\n  \"LastName\": \"Nolan\"\n}\n</code></pre>"},{"location":"endpoints/directors/create-director/#response","title":"Response","text":"<ul> <li>HTTP 201 Created: Returns the created director.</li> </ul> <pre><code>{\n    \"id\": 1,\n    \"firstName\": \"Christopher\",\n    \"lastName\": \"Nolan\"\n}\n</code></pre>"},{"location":"endpoints/directors/create-director/#error-response","title":"Error response","text":"<ul> <li> <p>HTTP 400 Bad Request: If the request body is invalid or missing required properties.</p> </li> <li> <p>HTTP 409 Conflict: If there is a conflict, such as trying to create a director with a duplicate name</p> </li> </ul>"},{"location":"endpoints/directors/delete-director/","title":"Delete Director by ID","text":""},{"location":"endpoints/directors/delete-director/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>DELETE</code></li> <li>URL: <code>api/directors/{id}</code></li> </ul>"},{"location":"endpoints/directors/delete-director/#description","title":"Description","text":"<p>Deletes a director based on the provided ID.</p>"},{"location":"endpoints/directors/delete-director/#path-parameters","title":"Path parameters","text":"<ul> <li><code>id</code> (required): The unique identifier of the director.</li> </ul>"},{"location":"endpoints/directors/delete-director/#example-request","title":"Example request","text":"<pre><code>DELETE /api/directors/1\n</code></pre>"},{"location":"endpoints/directors/delete-director/#response","title":"Response","text":"<ul> <li>HTTP 204 No Content: The director is successfully deleted.</li> </ul>"},{"location":"endpoints/directors/delete-director/#error-response","title":"Error response","text":"<ul> <li>HTTP 404 Not Found: If no director is found with the specified ID.</li> </ul>"},{"location":"endpoints/directors/get-all/","title":"Get All Directors","text":""},{"location":"endpoints/directors/get-all/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>GET</code></li> <li>URL: <code>api/directors</code></li> </ul>"},{"location":"endpoints/directors/get-all/#description","title":"Description","text":"<p>Returns a list of all directors.</p>"},{"location":"endpoints/directors/get-all/#example-request","title":"Example request","text":"<pre><code>GET /api/directors\n</code></pre> <pre><code>[\n  {\n    \"Id\": 1,\n    \"FirstName\": \"Christopher\",\n    \"LastName\": \"Nolan\"\n  },\n  {\n    \"Id\": 2,\n    \"FirstName\": \"Quentin\",\n    \"LastName\": \"Tarantino\"\n  },\n  // ... other directors\n]\n</code></pre>"},{"location":"endpoints/directors/get-by-id/","title":"Get Director by ID","text":""},{"location":"endpoints/directors/get-by-id/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>GET</code></li> <li>URL: <code>api/directors/{id}</code></li> </ul>"},{"location":"endpoints/directors/get-by-id/#description","title":"Description","text":"<p>Retrieves details of a specific director based on the provided ID.</p>"},{"location":"endpoints/directors/get-by-id/#path-parameters","title":"Path parameters","text":"<ul> <li><code>id</code> (required): The unique identifier of the director.</li> </ul>"},{"location":"endpoints/directors/get-by-id/#example-request","title":"Example request","text":"<pre><code>GET /api/directors/1\n</code></pre>"},{"location":"endpoints/directors/get-by-id/#response","title":"Response","text":"<ul> <li>HTTP 200 OK: Returns details of the specified director.</li> </ul> <pre><code>{\n    \"id\": 1,\n    \"firstName\": \"Christopher\",\n    \"lastName\": \"Nolan\"\n}\n</code></pre>"},{"location":"endpoints/directors/get-by-id/#error-response","title":"Error response","text":"<ul> <li>HTTP 404 NotFound: If no director is found with the specified ID.</li> </ul>"},{"location":"endpoints/directors/update-director/","title":"Update Director by ID","text":""},{"location":"endpoints/directors/update-director/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>PUT</code></li> <li>URL: <code>api/directors/{id}</code></li> </ul>"},{"location":"endpoints/directors/update-director/#description","title":"Description","text":"<p>Updates the information of a specific director based on the provided ID.</p>"},{"location":"endpoints/directors/update-director/#path-parameters","title":"Path parameters","text":"<ul> <li><code>id</code> (required): The unique identifier of the director.</li> </ul>"},{"location":"endpoints/directors/update-director/#example-request","title":"Example request","text":"<pre><code>PUT /api/directors/1\nContent-Type: application/json\n\n{\n  \"firstName\": \"UpdatedFirstName\",\n  \"lastName\": \"UpdatedLastName\"\n}\n</code></pre>"},{"location":"endpoints/directors/update-director/#response","title":"Response","text":"<ul> <li>HTTP 204 No Content: The director information is successfully updated.</li> </ul>"},{"location":"endpoints/directors/update-director/#error-response","title":"Error response","text":"<ul> <li>HTTP 400 Bad Request: If the request payload is invalid.</li> </ul>"},{"location":"endpoints/movies/create-movie/","title":"Create Movie","text":""},{"location":"endpoints/movies/create-movie/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>POST</code></li> <li>URL: <code>api/movies</code></li> <li>Content Type: <code>multipart/form-data</code></li> </ul>"},{"location":"endpoints/movies/create-movie/#description","title":"Description","text":"<p>Create a new movie the provided information, including title, release date, synopsis, cover image, trailers, director, and category.</p>"},{"location":"endpoints/movies/create-movie/#request-body","title":"Request Body","text":"Parameter Type Description <code>Title</code> String The title of the movie. <code>ReleaseDateOf</code> DateTime The release date of the movie. <code>Synopsis</code> String A brief description or synopsis of the movie. <code>Cover</code> File The cover image of the movie. <code>Trailers</code> List of Objects A list of trailers for the movie. <code>DirectorId</code> Integer The unique identifier of the director. <code>CategoryId</code> Integer The unique identifier of the category."},{"location":"endpoints/movies/create-movie/#trailer-object","title":"Trailer Object","text":"Parameter Type (Enum) Description <code>Type</code> Enum (0/1) The type of the trailer (0: Official, 1: Teaser). <code>Platform</code> Enum (0/1) The platform where the trailer is hosted (0: Youtube, 1: Vimeo). <code>Link</code> String The link to the trailer."},{"location":"endpoints/movies/create-movie/#example-request","title":"Example request","text":"<pre><code>POST /api/movies\nContenty-Type: multipart/form-data\n\nTitle=Example Film\nReleaseDateOf=2022-01-01 00:00:00\nSynopsis=An example movie synopsis.\nCover=@example-cover.jpg;type=image/jpeg\nTrailers[0].Type=0\nTrailers[0].Plataform=0\nTrailers[0].Link=https://www.youtube.com/watch?v=example\nDirectorId=1\nCategoryId=1\n</code></pre>"},{"location":"endpoints/movies/create-movie/#response","title":"Response","text":"<ul> <li>HTTP 201 Created: Returns the details of the created movie</li> </ul>"},{"location":"endpoints/movies/create-movie/#error-response","title":"Error response","text":"<ul> <li> <p>HTTP 400 Bad Request: If the request is invalid, providing details about the errors.</p> </li> <li> <p>HTTP 404 Not Found: If the specified director or category is not found</p> </li> </ul>"},{"location":"endpoints/movies/delete-movie/","title":"Delete Movie","text":""},{"location":"endpoints/movies/delete-movie/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>DELETE</code></li> <li>URL: <code>api/movies/{id}</code></li> </ul>"},{"location":"endpoints/movies/delete-movie/#description","title":"Description","text":"<p>Delete a specific movie based on the provided ID.</p>"},{"location":"endpoints/movies/delete-movie/#path-parameters","title":"Path parameters","text":"<ul> <li><code>id</code> (required): The unique identifier of the movie.</li> </ul>"},{"location":"endpoints/movies/delete-movie/#example-request","title":"Example request","text":"<pre><code>DELETE api/movies/1\n</code></pre>"},{"location":"endpoints/movies/delete-movie/#response","title":"Response","text":"<ul> <li>HTTP 204 No Content: Indicates successful deletion of the specified movie.</li> </ul>"},{"location":"endpoints/movies/delete-movie/#error-response","title":"Error response","text":"<ul> <li>HTTP 404 Not Found: If no movies is found with the specified ID.</li> </ul>"},{"location":"endpoints/movies/get-all-movies/","title":"Get all movies","text":""},{"location":"endpoints/movies/get-all-movies/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP Method: <code>GET</code></li> <li>URL: <code>api/movies/</code></li> </ul>"},{"location":"endpoints/movies/get-all-movies/#description","title":"Description","text":"<p>Retrieves a paginated list of all movies.</p>"},{"location":"endpoints/movies/get-all-movies/#query-parameters","title":"Query Parameters","text":"<ul> <li><code>pageNumber</code> (optional): Page number of pagination (default: 1).</li> <li><code>pageSize</code> (optional): Number of items per page (default: 10).</li> </ul>"},{"location":"endpoints/movies/get-all-movies/#response","title":"Response","text":"<ul> <li>HTTP 200 OK: Returns a paginated list of movies.</li> </ul> <pre><code>{\n  \"Count\": 20,\n  \"Next\": \"/api/movies/?pageNumber=3\",\n  \"Previous\": \"/api/movies/?pageNumber=1\",\n  \"Results\": [\n    {\n      \"Id\": 1,\n      \"Title\": \"Movie Title\",\n      \"ReleaseDateOf\": \"2022-01-01T00:00:00\",\n      \"ReleaseYear\": 2022,\n      \"Synopsis\": \"Movie synopsis...\",\n      \"Trailers\": [],\n      \"Director\": {\n        \"Id\": 1,\n        \"FirstName\": \"John\",\n        \"LastName\": \"Doe\"\n      },\n      \"Category\": {\n        \"Id\": 1,\n        \"Name\": \"Action\"\n      },\n      \"CoverImagePath\": \"/images/movie_cover.jpg\"\n    },\n    // ... additional movies ...\n  ]\n}\n</code></pre>"},{"location":"endpoints/movies/get-movie-by-id/","title":"Get movie by ID","text":""},{"location":"endpoints/movies/get-movie-by-id/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>GET</code></li> <li>URL: <code>api/movies/{id}</code></li> </ul>"},{"location":"endpoints/movies/get-movie-by-id/#description","title":"Description","text":"<p>Retrieves details of a specific movie based on the provided ID. This includes information about the movie and links to embedded trailers.</p>"},{"location":"endpoints/movies/get-movie-by-id/#path-parameters","title":"Path parameters","text":"<ul> <li><code>id</code> (required): The unique identifier of the movie.</li> </ul>"},{"location":"endpoints/movies/get-movie-by-id/#example-request","title":"Example request","text":"<pre><code>GET /api/movies/1\n</code></pre>"},{"location":"endpoints/movies/get-movie-by-id/#response","title":"Response","text":"<ul> <li>HTTP 200 OK: Returns details of the specified movie, including embedded links for each trailer. </li> </ul> <pre><code>{\n  \"Id\": 1,\n  \"Title\": \"Inception\",\n  \"ReleaseDateOf\": \"2010-07-16T00:00:00\",\n  \"ReleaseYear\": 2010,\n  \"Synopsis\": \"A thief who steals corporate secrets through the use of dream-sharing technology.\",\n  \"Trailers\": [\n    {\n      \"Id\": 1,\n      \"Type\": 0,\n      \"Platform\": 0,\n      \"Link\": \"https://www.youtube.com/embed/d3A3-zSOBT4\",\n    }\n  ],\n  \"Director\": {\n    \"Id\": 1,\n    \"FirstName\": \"Christopher\",\n    \"LastName\": \"Nolan\"\n  },\n  \"Category\": {\n    \"Id\": 1,\n    \"Name\": \"Sci-Fi\"\n  },\n  \"CoverImagePath\": \"/images/inception_cover.jpg\"\n}\n</code></pre>"},{"location":"endpoints/movies/get-movie-by-id/#error-response","title":"Error response","text":"<ul> <li>HTTP 404 Not Found: If no movie is found with the specified ID.</li> </ul>"},{"location":"endpoints/movies/search-movie/","title":"Search Movies","text":""},{"location":"endpoints/movies/search-movie/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>GET</code></li> <li>URL: <code>api/movies/search</code></li> </ul>"},{"location":"endpoints/movies/search-movie/#description","title":"Description","text":"<p>Search for movies based on specified criteria such as name, release year, and category. Retrieve a paginated list of matching movies</p>"},{"location":"endpoints/movies/search-movie/#query-parameters","title":"Query Parameters","text":"<ul> <li><code>name</code> (optional): Movie name to search for.</li> <li><code>releaseYear</code> (optional): Release year of the movie.</li> <li><code>categoryId</code> (optional): ID of the category to filter by.</li> <li><code>pageNumber</code> (optional): Page number for pagination (default is 1).</li> <li><code>pageSize</code> (optional): Number of items per page (default is 10).</li> </ul>"},{"location":"endpoints/movies/search-movie/#example-request","title":"Example request","text":"<pre><code>GET /api/movies/search?name=Inception&amp;releaseYear=2010&amp;categoryId=1&amp;pageNumber=1&amp;pageSize=10\n</code></pre>"},{"location":"endpoints/movies/search-movie/#response","title":"Response","text":"<ul> <li>HTTP 200 OK: Returns a paginated list of movies that match the search criteria.</li> </ul> <pre><code>{\n  \"count\": 1,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"title\": \"Spider-Man: Homecoming\",\n      \"releaseDateOf\": \"2017-07-07T00:00:00\",\n      \"releaseYear\": 2017,\n      \"synopsis\": \"In Spider-Man: Homecoming, after acting alongside the Avengers, the time has come for Peter Parker (Tom Holland) to return home and to his life, which is no longer so normal.\",\n      \"trailers\": [\n        {\n          \"type\": 0,\n          \"plataform\": 0,\n          \"link\": \"https://www.youtube.com/watch?v=rk-dF1lIbIg\",\n          \"id\": 2\n        }\n      ],\n      \"director\": {\n        \"firstName\": \"Jon\",\n        \"lastName\": \"Watts\",\n        \"id\": 1\n      },\n      \"category\": {\n        \"name\": \"Action\",\n        \"id\": 1\n      },\n      \"coverImagePath\": \"images/cover_image.jpg\",\n      \"id\": 1\n    }\n  ]\n}\n</code></pre>"},{"location":"endpoints/movies/search-movie/#error-response","title":"Error response","text":"<ul> <li>HTTP 500 Internal Server Error: If an unexpected error occurs during the search.</li> </ul>"},{"location":"endpoints/movies/update-movie/","title":"Update Movie Details","text":""},{"location":"endpoints/movies/update-movie/#endpoint","title":"Endpoint","text":"<ul> <li>HTTP method: <code>PUT</code></li> <li>URL: <code>api/movies/{id}</code></li> </ul>"},{"location":"endpoints/movies/update-movie/#description","title":"Description","text":"<p>Update details of a specific movie identified by the provided ID. This includes modifying information such as title, release date, synopsis, director, category, trailers, and cover image.</p>"},{"location":"endpoints/movies/update-movie/#path-parameters","title":"Path parameters","text":"<ul> <li><code>id</code> (required): The unique identifier of the movie.</li> </ul>"},{"location":"endpoints/movies/update-movie/#request","title":"Request","text":""},{"location":"endpoints/movies/update-movie/#request-headers","title":"Request Headers","text":"<ul> <li><code>Content-Type</code>: <code>multipart/form-data</code></li> </ul>"},{"location":"endpoints/movies/update-movie/#request-body","title":"Request Body","text":"<ul> <li><code>Title</code> (optional): New title for the movie.</li> <li><code>ReleaseDataOf</code> (optional): New release date for the movie.</li> <li><code>Synopsis</code> (optional): New synopsis for the movie.</li> <li><code>Cover</code> (optional): New cover image for the movie.</li> <li><code>Trailers</code> (optional): List of trailers to be associated with the movie.</li> </ul>"},{"location":"endpoints/movies/update-movie/#example-request","title":"Example request","text":"<pre><code>PUT /api/movies/1\n</code></pre>"},{"location":"endpoints/movies/update-movie/#request-body_1","title":"Request body:","text":"<pre><code>{\n  \"Title\": \"Inception 2.0\",\n  \"ReleaseDateOf\": \"2022-12-01T00:00:00\",\n  \"Synopsis\": \"A new twist to the dream-sharing saga.\",\n  \"Cover\": (new cover image file),\n  \"Trailers\": [\n    {\n      \"Type\": 0,\n      \"Plataform\": 0,\n      \"Link\": \"https://www.youtube.com/watch?v=newtrailer\"\n    }\n  ]\n}\n</code></pre>"},{"location":"endpoints/movies/update-movie/#response","title":"Response","text":"<ul> <li>HTTP 204 No Content: Movie details successfully updated.</li> </ul>"},{"location":"endpoints/movies/update-movie/#error-response","title":"Error response","text":"<ul> <li> <p>HTTP 400 Bad Request: if the request body is invalid or contains errors.</p> </li> <li> <p>HTTP 404 Not Found: If no movie is found with the specified ID.</p> </li> </ul>"},{"location":"release-notes/v1.0/","title":"V1.0","text":""},{"location":"release-notes/v1.0/#release-notes-version-10","title":"Release Notes - Version 1.0","text":""},{"location":"release-notes/v1.0/#lights-camera-action","title":"Lights, Camera, Action!","text":"<p>Welcome to the grand opening of OpenMovies API Version 1.0 \ud83c\udf89\ud83c\udf7f</p>"},{"location":"release-notes/v1.0/#plot-highlights","title":"Plot Highlights","text":"<p>In this feature-packed release, we've crafted an experience that lets you unravel the cinematic secrets of your movie world. Here's a sneak peek at the main attractions:</p>"},{"location":"release-notes/v1.0/#movie-magic","title":"\ud83c\udfac Movie Magic","text":"<p>Explore the intricate details of your favorite movies with our comprehensive set of CRUD operations. From creating new films to deleting old classics, OpenMovies has you covered.</p>"},{"location":"release-notes/v1.0/#trailer-embeds","title":"\ud83c\udfa5 Trailer Embeds","text":"<p>Turn your YouTube trailer links into captivating embedded previews. Now your users can get a glimpse of the action without leaving your application.</p>"},{"location":"release-notes/v1.0/#cover-image-upload","title":"\ud83c\udf9e\ufe0f Cover Image Upload","text":"<p>Capture the essence of each film by uploading cover images directly through the API. Manage the visual appeal of your movie database effortlessly.</p>"},{"location":"release-notes/v1.0/#search-discover","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f Search &amp; Discover","text":"<p>Unleash the detective in you with powerful search functionalities. Find cinematic treasures based on categories, directors, or even the movie title.</p>"}]}